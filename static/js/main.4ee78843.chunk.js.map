{"version":3,"sources":["assets/LogoBlue.svg","config/api.js","Map/types/index.js","utils/functions.jsx","Map/actions/index.js","config/map.js","config/axisDescription.js","DataDisplay/components/BarGraph.jsx","DataDisplay/components/DataDisplay.jsx","DataDisplay/containers/DataDisplayContainer.jsx","config/legend.js","Legend/Legend.jsx","Error/Error.jsx","libs/Progress.js","Map/components/Map.jsx","Map/containers/MapContainer.js","Header/components/Header.jsx","Footer/components/Footer.jsx","App/App.jsx","Map/reducers/stations.js","Map/reducers/data.js","Map/reducers/partialData.js","config/reducers.js","Map/reducers/idArray.js","Map/store/saga/index.js","config/sagas.js","config/store.js","index.js"],"names":["module","exports","__webpack_require__","p","API_KEY","BASE_URL","MAX_RESULT","FETCH_STATIONS","FETCH_DATA_FOR_ONE_STATION","FETCHED_STATIONS_FAILED","FETCHED_ONE_STATION_FAILED","IDS_ARRAY","FETCH_PARTIAL_DATA","FETCHED_PARTIAL_FAILED","getAllId","arrayObject","arrId","map","someObject","push","id","mergeObjects","obj1","obj2","Object","objectSpread","apiFetchStations","apiFetchPartialData","apiFetchDataForOneStation","fetchedStationsData","payload","type","fetchedMeasurementData","fetchedPartialData","_ref","LAT","LON","MAX_DISTANCE","URL","response","arrayOfIds","regenerator_default","a","wrap","_context","prev","next","concat","call","axios","get","sent","put","data","TYPES","t0","error","stop","_marked","this","_ref2","idArray","uids","urls","responseAll","_context2","uid","all","url","resp","i","current","_marked2","_ref3","installationId","_context3","_marked3","MAP_START_POINT_WGS84","mapStyles","clicked","Style","image","Circle","radius","fill","Fill","color","default","desc","PM1","PM25","PM10","HUMIDITY","TEMPERATURE","PRESSURE","MARGIN","BarGraph","_this$props","props","title","xMax","yMax","x","d","time","y","value","yMinData","Math","min","apply","toConsumableArray","yMaxData","max","xScale","scaleBand","rangeRound","domain","padding","yScale","scaleLinear","compose","scale","accessor","data1","xPoint","yPoint","react_default","createElement","Fragment","width","height","barHeight","vx_group_es","key","random","vx_shape_es","bandwidth","vx_axis_es","top","label","labelOffset","stroke","tickClassName","labelClassName","left","tickLabelProps","dx","dy","fontFamily","fontSize","textAnchor","transform","charAt","slice","toLowerCase","object","result","axisDescription","Component","defaultProps","DataDisplay","state","dataBar","open","onClickHandler","name","_this","getHistoricalData","allHistoricalData","history","hour","getValueForName","undefined","values","length","find","o","fromDateTime","setState","renderCurrentParams","getValue","param","val","className","onClick","openData","prevProps","address","_this2","_this$state","closeMenu","DataDisplay_components_BarGraph","connect","levels","minValue","maxValue","level","description","LegendList","levelsItem","style","backgroundColor","ErrorComponent","message","ProgressBar","el","classCallCheck","addLoading","loading","show","update","addLoaded","setTimeout","loaded","hide","visibility","LAYER_NAME_KEY","LAYER_NAME_STATIONS","MapComponent","possibleConstructorReturn","getPrototypeOf","handleButton","createMap","mapStartingPoint","tileSource","OSM","on","progress","tile","TileLayer","source","layer","VectorLayer","Vector","features","mapView","View","center","zoom","set","Map","target","layers","view","getMaxDistanceFromMap","getSize","getView","values_","resolution","createLayerFeatures","stations","station","lat","location","latitude","lon","longitude","_station$address","city","street","number","stationAddress","feature","Feature","geometry","Point","fromLonLat","setId","updateLayerWithFeatures","markerLayerSource","getLayerByName","getLayers","setSource","mapRegisterEvents","fetchMeasurement","e","preventDefault","iconFeature","getFeaturesAtPixel","pixel","getId","adr","layerName","forEach","document","getElementById","fetchStations","DISTANCE","featuresLayerPointerMove","featuresLayerClick","newProps","_this$props2","fetchPartialData","_this$props3","partial","stationFeatures","createFeaturesLayers","_this$props4","Legend_Legend","Error_Error","keys","DataDisplayContainer","colorFeature","property","indexes","getFill","getColor","featureSource","addFeature","setStyle","setColorFeatureStyle","featureLayer","addLayer","_this3","getTargetElement","cursor","hasFeatureAtPixel","select","Select","addInteraction","selected","mapDispatchToProps","Header","src","logo","alt","Footer","App","Header_components_Header","MapContainer","Footer_components_Footer","INITIAL_STATE","rootReducer","combineReducers","arguments","action","sensorsSaga","measurementSaga","measurementPartialSaga","takeEvery","ACTIONS","saga_marked","saga_marked2","saga_marked3","rootSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","es","src_App_App"],"mappings":"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","file":"static/js/main.4ee78843.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LogoBlue.a4a34cab.svg\";","export const API_KEY = 'iqLYPFZ7M4Eq12NppSUo2yv5epuX1PpY';\nexport const BASE_URL = 'https://airapi.airly.eu/v2';\nexport const MAX_RESULT = 20; // quantity depends on api conditions\n// - free api data is limited to 50 calls per min and 1000 per day\n","export const FETCH_STATIONS = 'FETCH_STATIONS';\nexport const FETCHED_STATIONS_DATA = 'FETCHED_STATIONS_DATA';\nexport const FETCH_DATA_FOR_ONE_STATION = 'FETCH_DATA_FOR_STATION';\nexport const FETCHED_STATIONS_FAILED = 'FETCHED_STATIONS_FAILED';\nexport const FETCHED_DATA_FOR_ONE_STATION = 'FETCHED_DATA_FOR_ONE_STATION';\nexport const FETCHED_ONE_STATION_FAILED = 'FETCHED_ONE_STATION_FAILED';\nexport const IDS_ARRAY = 'IDS_ARRAY';\nexport const FETCH_PARTIAL_DATA = 'FETCH_PARTIAL_DATA';\nexport const FETCHED_PARTIAL_DATA = 'FETCHED_PARTIAL_DATA';\nexport const FETCHED_PARTIAL_FAILED = 'FETCHED_PARTIAL_FAILED';\n","export function getAllId(arrayObject) {\n  const arrId = [];\n  arrayObject.map(someObject => arrId.push(someObject.id));\n  return arrId;\n}\n\nexport function getAllData(func, arrayData) {\n  return arrayData.map(item => func(item));\n}\n\nexport function mergeObjects(obj1, obj2) {\n  return { ...obj1, ...obj2 };\n}\n\nexport function axisDescription(object, key) {\n  let result = null;\n  if (key in object) {\n    result = object[key];\n  }\n  return result;\n}\n","import { call, put, all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { BASE_URL, API_KEY, MAX_RESULT } from '../../config/api';\nimport * as TYPES from '../types';\nimport { getAllId, mergeObjects } from '../../utils/functions';\n\n// ACTIONS\nexport const fetchStations = (LAT, LON, MAX_DISTANCE) => ({\n  type: TYPES.FETCH_STATIONS,\n  LAT,\n  LON,\n  MAX_DISTANCE,\n});\n\nexport const fetchedStationsData = payload => ({\n  type: TYPES.FETCHED_STATIONS_DATA,\n  payload,\n});\n\nexport const fetchMeasurement = installationId => ({\n  type: TYPES.FETCH_DATA_FOR_ONE_STATION,\n  installationId,\n});\n\nexport const fetchedMeasurementData = payload => ({\n  type: TYPES.FETCHED_DATA_FOR_ONE_STATION,\n  payload,\n});\n\nexport const fetchPartialData = idArray => ({\n  type: TYPES.FETCH_PARTIAL_DATA,\n  idArray,\n});\n\nexport const fetchedPartialData = payload => ({\n  type: TYPES.FETCHED_PARTIAL_DATA,\n  payload,\n});\n\n//  API functions\nexport function* apiFetchStations({ LAT, LON, MAX_DISTANCE }) {\n  const URL = `${BASE_URL}/installations/nearest/?lat=${LAT}&lng=${LON}&maxDistanceKM=${MAX_DISTANCE}&maxResults=${MAX_RESULT}&apikey=${API_KEY}`;\n  try {\n    const response = yield call(axios.get, URL);\n    yield put(fetchedStationsData(response.data));\n    // create array of id's for all stations\n    const arrayOfIds = yield call(getAllId, response.data);\n    yield put({ type: TYPES.IDS_ARRAY, arrayOfIds });\n  } catch (error) {\n    yield put({ type: TYPES.FETCHED_STATIONS_FAILED, error });\n  }\n}\n\nexport function* apiFetchPartialData({ idArray }) {\n  const uids = idArray.map(id => ({ uid: id }));\n  try {\n    const urls = idArray.map(id => `${BASE_URL}/measurements/installation?installationId=${id}&apikey=${API_KEY}`);\n    const response = yield all(urls.map(url => call(axios.get, url)));\n    const responseAll = yield all(response.map((resp, i) => call(mergeObjects, resp.data.current, uids[i])));\n    yield put(fetchedPartialData(responseAll));\n  } catch (error) {\n    yield put({ type: TYPES.FETCHED_PARTIAL_FAILED, error });\n  }\n}\n\nexport function* apiFetchDataForOneStation({ installationId }) {\n  const URL = `${BASE_URL}/measurements/installation?installationId=${installationId}&apikey=${API_KEY}`;\n  try {\n    const response = yield call(axios.get, URL);\n    yield put(fetchedMeasurementData(response.data));\n  } catch (error) {\n    yield put({ type: TYPES.FETCHED_ONE_STATION_FAILED, error });\n  }\n}\n","import { Circle, Fill, Style } from 'ol/style';\n\nexport const MAP_START_POINT_WGS84 = [19.9449799, 50.0646501];\n\nexport const mapStyles = {\n  clicked: new Style({\n    image: new Circle({\n      radius: 10,\n      fill: new Fill({\n        color: '#1C1F1E',\n      }),\n    }),\n  }),\n  default: new Style({\n    image: new Circle({\n      radius: 15,\n      fill: new Fill({\n        color: '#5A5E60',\n      }),\n    }),\n  }),\n};\n","export const desc = {\n  PM1: '[µg/m3]',\n  PM25: '[µg/m3]',\n  PM10: '[µg/m3]',\n  HUMIDITY: '[%]',\n  TEMPERATURE: '[℃]',\n  PRESSURE: '[hPa]',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Group } from '@vx/group';\nimport { Bar } from '@vx/shape';\nimport { scaleLinear, scaleBand } from '@vx/scale';\nimport { AxisBottom, AxisLeft } from '@vx/axis';\nimport { axisDescription } from '../../utils/functions';\nimport { desc } from '../../config/axisDescription';\nimport './BarGraph.css';\n\nconst WIDTH = 380;\nconst HEIGHT = 250;\nconst MARGIN = { top: 50, bottom: 50, left: 20, right: 20 };\n\nclass BarGraph extends Component {\n  render() {\n    const { data, title } = this.props;\n\n    const xMax = WIDTH - MARGIN.left - MARGIN.right;\n    const yMax = HEIGHT - MARGIN.top - MARGIN.bottom;\n\n    const x = d => d.time;\n    const y = d => d.value;\n    const yMinData = Math.min(...data.map(y));\n    const yMaxData = Math.max(...data.map(y));\n\n    const xScale = scaleBand({\n      rangeRound: [100, xMax],\n      domain: data.map(x),\n      padding: 0.2,\n    });\n\n    const yScale = scaleLinear({\n      rangeRound: [yMax, 0],\n      domain: [yMinData - yMinData * 0.01, yMaxData],\n    });\n\n    const compose = (scale, accessor) => data1 => scale(accessor(data1));\n\n    const xPoint = compose(xScale, x);\n    const yPoint = compose(yScale, y);\n    const fill = `#394585`; //eslint-disable-line\n\n    return (\n        <>\n          <h4>{title}</h4>\n          <svg width={WIDTH} height={HEIGHT}>\n            {data.map((d) => {\n              const barHeight = yMax - yPoint(d);\n              return (\n                <Group key={Math.random()} fill={fill}>\n                  <Bar\n                    x={xPoint(d)}\n                    y={yMax - barHeight}\n                    height={barHeight}\n                    width={xScale.bandwidth()}\n                  />\n                </Group>\n              );\n            })}\n            <AxisBottom\n              top={yMax + 20}\n              label=\"Time [h]\"\n              labelOffset={20}\n              scale={xScale}\n              stroke=\"black\"\n              tickClassName=\"tick-bottom\"\n              labelClassName=\"label\"\n            />\n            <AxisLeft\n              left={80}\n              scale={yScale}\n              tickLabelProps={() => ({ dx: '-5px',\n                dy: '7px',\n                fill: 'black',\n                fontFamily: 'Arial',\n                fontSize: 10,\n                textAnchor: 'end' })\n              }\n            />\n            <text x=\"-130\" y=\"35\" transform=\"rotate(-90)\" fontSize={16}>\n              {title.charAt(0) + title.slice(1).toLowerCase()}\n              {' '}\n              { axisDescription(desc, title)}\n            </text>\n          </svg>\n        </>\n    );\n  }\n}\n\nBarGraph.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n};\n\nBarGraph.defaultProps = {\n  data: [],\n  title: 'missing title',\n};\n\nexport default BarGraph;\n","import React, { Component } from 'react';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types';\nimport BarGraph from './BarGraph';\nimport './DataDisplay.css';\n\nclass DataDisplay extends Component {\n  state = {\n    dataBar: [],\n    title: '',\n    open: true,\n  };\n\n  componentWillReceiveProps(props) {\n    this.setState({ open: props.openData });\n  }\n\n  // reset dataBar when station is clicked on the map\n  componentDidUpdate(prevProps) {\n    const { address } = this.props;\n    const { dataBar } = this.state;\n    if (prevProps.address !== address) {\n      dataBar.length = 0;\n    }\n  }\n\n  onClickHandler = (name) => {\n    this.getHistoricalData(name);\n  };\n\n  // get historical data for one parameter\n  getHistoricalData = (name) => {\n    const { data: { history } } = this.props;\n    const allHistoricalData = history.map((hour) => {\n      const getValueForName = (hour.values === undefined\n          || hour.values.length === 0)\n        ? 0\n        : hour.values.find(o => o.name === name).value;\n      return {\n        time: hour.fromDateTime.slice(11, 16),\n        value: getValueForName,\n      };\n    });\n\n    this.setState(\n      {\n        dataBar: allHistoricalData,\n        title: name,\n      },\n    );\n  };\n\n  closeMenu() {\n    const open = this.state;\n    this.setState({ open: !open });\n  }\n\n  // display current values\n  renderCurrentParams = () => {\n    const { data: { current } } = this.props;\n    const getValue = get(current, 'values', []);\n    const param = getValue.map(val => (\n      <div className=\"Box\" key={Math.random()}>\n        <div>\n          {val.name}\n          {' - '}\n          {val.value}\n        </div>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => this.onClickHandler(val.name)}\n        >\n            History\n        </button>\n      </div>\n    ));\n    const emptyDiv = () => (\n      <div className=\"Box\">\n        <div>Nothing to show</div>\n      </div>\n    );\n    return (\n      <div className=\"Current\">\n        <hr />\n        <p>CURRENT VALUES</p>\n        {getValue.length > 0 ? param : emptyDiv()}\n      </div>\n    );\n  };\n\n  render() {\n    const { dataBar, title, open } = this.state;\n    const { address } = this.props;\n    return (\n      <div>\n        {open && (\n        <div className=\"Data\">\n          <button\n            type=\"button\"\n            className=\"close\"\n            onClick={() => this.closeMenu()}\n          >\nX\n          </button>\n          <div className=\"Header\">\n            <h4>\n                STATION:&nbsp;\n              {address}\n            </h4>\n          </div>\n          <div className=\"Values\">\n            {this.renderCurrentParams()}\n            <div className=\"Historical\">\n              <hr />\n              <p>VALUES FROM LAST 24 HOURS</p>\n              {(dataBar && dataBar.length > 0)\n                ? <BarGraph data={dataBar} title={title} />\n                : <div />}\n            </div>\n          </div>\n        </div>)\n          }\n      </div>\n    );\n  }\n}\n\nDataDisplay.propTypes = {\n  data: PropTypes.object,\n  address: PropTypes.string,\n  openData: PropTypes.bool.isRequired,\n};\n\nDataDisplay.defaultProps = {\n  data: {},\n  address: 'Station Address',\n};\n\nexport default DataDisplay;\n","import { connect } from 'react-redux';\nimport DataDisplay from '../components/DataDisplay';\n\nconst mapStateToProps = ({ data }) => ({ data });\n\nexport default connect(mapStateToProps, null)(DataDisplay);\n","// based on AIRLY_CAQI\nexport const levels = [\n  {\n    minValue: 0,\n    maxValue: 25,\n    values: '0-25',\n    level: 'VERY_LOW',\n    description: 'Very Low',\n    color: '#6BC926',\n  },\n  {\n    minValue: 25,\n    maxValue: 50,\n    values: '25-50',\n    level: 'LOW',\n    description: 'Low',\n    color: '#D1CF1E',\n  },\n  {\n    minValue: 50,\n    maxValue: 75,\n    values: '50-75',\n    level: 'MEDIUM',\n    description: 'Medium',\n    color: '#EFBB0F',\n  },\n  {\n    minValue: 75,\n    maxValue: 87.5,\n    values: '75-87.5',\n    level: 'HIGH',\n    description: 'High',\n    color: '#EF7120',\n  },\n  {\n    minValue: 87.5,\n    maxValue: 100,\n    values: '87.5-100',\n    level: 'VERY_HIGH',\n    description: 'Very High',\n    color: '#EF2A36',\n  },\n  {\n    minValue: 100,\n    maxValue: 125,\n    values: '100-125',\n    level: 'EXTREME',\n    description: 'Extreme',\n    color: '#B00057',\n  },\n  {\n    minValue: 125,\n    maxValue: null,\n    values: '125+',\n    level: 'AIRMAGEDDON',\n    description: 'Airmageddon!',\n    color: '#770078',\n  },\n  {\n    minValue: null,\n    maxValue: null,\n    values: 'null',\n    level: 'null',\n    description: 'Lack of Data',\n    color: '#5A5E60',\n  },\n];\n","import React from 'react';\nimport { levels } from '../config/legend';\nimport './Legend.css';\n\nconst LegendList = () => {\n  const levelsItem = levels.map(level => (\n    <div className=\"list\" key={Math.random()}>\n      <span style={{ backgroundColor: level.color }} />\n      {level.description}\n    </div>\n  ));\n\n  return (\n    <div className=\"legend\">\n      <header>POLLUTION LEVEL:</header>\n      <div className=\"row\">\n        {levelsItem}\n      </div>\n    </div>\n  );\n};\n\nexport default LegendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Error.css';\n\nconst ErrorComponent = ({ message }) => (\n  <div className=\"error\">\n    <p>ERROR:</p>\n    <br />\n    {message}\n  </div>);\n\nErrorComponent.propTypes = {\n  message: PropTypes.string,\n};\n\nErrorComponent.defaultProps = {\n  message: '',\n};\n\nexport default ErrorComponent;\n","class ProgressBar {\n  constructor(el) {\n    this.el = el;\n    this.loading = 0;\n    this.loaded = 0;\n  }\n\n  addLoading = () => {\n    if (this.loading === 0) {\n      this.show();\n    }\n    ++this.loading; //eslint-disable-line\n    this.update();\n  };\n\n  addLoaded = () => {\n    setTimeout(() => {\n      ++this.loaded; //eslint-disable-line\n      this.update();\n    }, 100);\n  };\n\n  update = () => {\n    if (this.loading === this.loaded) {\n      this.loading = 0;\n      this.loaded = 0;\n      setTimeout(() => {\n        this.hide();\n      }, 250);\n    }\n  };\n\n  show = () => {\n    this.el.style.visibility = 'visible';\n  };\n\n  hide = () => {\n    if (this.loading === this.loaded) {\n      this.el.style.visibility = 'hidden';\n    }\n  };\n}\n\nexport default ProgressBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Map, View, Feature } from 'ol';\nimport { Point } from 'ol/geom';\nimport { Select } from 'ol/interaction';\nimport { Vector as VectorLayer, Tile as TileLayer } from 'ol/layer';\nimport { OSM, Vector } from 'ol/source';\nimport { fromLonLat } from 'ol/proj';\nimport { Circle, Fill, Style } from 'ol/style';\nimport {\n  MAP_START_POINT_WGS84,\n  mapStyles,\n} from '../../config/map';\nimport DataDisplay from '../../DataDisplay/containers/DataDisplayContainer';\nimport LegendList from '../../Legend/Legend';\nimport ErrorComponent from '../../Error/Error';\nimport 'ol/ol.css';\nimport './Map.css';\nimport ProgressBar from '../../libs/Progress';\n\nconst LAYER_NAME_KEY = 'layer_name';\nconst LAYER_NAME_STATIONS = 'layer_stations';\n\n\nconst LAT = MAP_START_POINT_WGS84[1];\nconst LON = MAP_START_POINT_WGS84[0];\n\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.map = {};\n    this.progress = {};\n    this.state = {\n      address: '',\n      openData: true,\n    };\n  }\n\n  componentDidMount() {\n    this.progress = new ProgressBar(document.getElementById('loader'));\n    this.map = this.createMap(fromLonLat(MAP_START_POINT_WGS84));\n    const { fetchStations, fetchMeasurement } = this.props;\n    const DISTANCE = this.getMaxDistanceFromMap();\n    fetchStations(LAT, LON, DISTANCE);\n    this.mapRegisterEvents(fetchMeasurement);\n    this.featuresLayerPointerMove();\n    this.featuresLayerClick();\n  }\n\n  componentWillReceiveProps(newProps) {\n    const { idArray, fetchPartialData } = this.props;\n    if (idArray !== newProps.idArray) {\n      fetchPartialData(newProps.idArray);\n    }\n  }\n\n  componentDidUpdate() {\n    const { stations, partial } = this.props;\n    if (stations && stations.length > 0 && partial.length > 0) {\n      const stationFeatures = this.createLayerFeatures(stations);\n      this.updateLayerWithFeatures(stationFeatures);\n      this.createFeaturesLayers(stationFeatures);\n    }\n  }\n\n  handleButton = () => { // eslint-disable-line\n    const { openData } = this.state;\n    this.setState({ openData: !openData });\n  };\n\n  render() { // eslint-disable-line react/sort-comp\n    const { data, stations, partial } = this.props;\n    const { address, openData } = this.state;\n\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div id=\"map\" className=\"Map\">\n            <div id=\"loader\" />\n          </div>\n        </div>\n        <LegendList />\n        { typeof stations[0] === 'string' && <ErrorComponent message={stations[0]} /> }\n        { typeof partial[0] === 'string' && <ErrorComponent message={partial[0]} /> }\n        { data.error && <ErrorComponent message={data.error} /> }\n        {\n            (Object.keys(data).length > 0)\n              ? (\n                <DataDisplay\n                  address={address}\n                  openData={openData}\n                  handleButton={this.handleButton}\n                />\n              )\n              : null\n          }\n      </div>\n    );\n  }\n\n  // MAP API\n  // --------------------------------------\n  // setting station color based on api data\n  setColorFeatureStyle(feature) {\n    const id = feature.getId();\n    const { partial } = this.props;\n    let colorFeature = '';\n\n    if (!id) {\n      return mapStyles.default.getFill().getColor();\n    }\n\n    partial.map((property) => { // eslint-disable-line array-callback-return\n      if (property.uid === id) {\n        colorFeature = property.indexes[0].color;\n      }\n    });\n    return colorFeature;\n  }\n\n  createMap = (mapStartingPoint) => { // eslint-disable-line react/sort-comp\n    // create tile layer and loader\n    const tileSource = new OSM();\n    tileSource.on('tileloadstart', () => {\n      this.progress.addLoading();\n    });\n\n    tileSource.on('tileloadend', () => {\n      this.progress.addLoaded();\n    });\n\n    tileSource.on('tileloaderror', () => {\n      this.progress.addLoaded();\n    });\n\n\n    const tile = new TileLayer({\n      source: tileSource,\n    });\n\n    // create data station layer\n    const layer = new VectorLayer({\n      source: new Vector({ features: [] }),\n    });\n\n    const mapView = new View({\n      center: mapStartingPoint,\n      zoom: 14,\n    });\n\n    layer.set(LAYER_NAME_KEY, LAYER_NAME_STATIONS);\n\n    return new Map({\n      target: 'map',\n      layers: [tile, layer],\n      view: mapView,\n    });\n  };\n\n  // value for radius fetching data useful especially for full access api data\n  getMaxDistanceFromMap = () => {\n    const RADIUS_FROM_CENTER = this.map.getSize()[0] / 2;\n    const CURRENT_RESOLUTION = this.map.getView().values_.resolution; // eslint-disable-line no-underscore-dangle\n    return RADIUS_FROM_CENTER * CURRENT_RESOLUTION / 1000;\n  };\n\n  // create stations layer\n  createLayerFeatures = stations => stations.map((station) => {\n    const lat = station.location.latitude;\n    const lon = station.location.longitude;\n    const { address: { city, street, number }, id } = station;\n    let stationAddress = '';\n    (street === null && number === null)\n      ? stationAddress = `${city}`\n      : stationAddress = `${city} ul. ${street} ${number}`;\n\n    const feature = new Feature({\n      geometry: new Point(fromLonLat([lon, lat])),\n      address: stationAddress,\n    });\n\n    feature.setId(id);\n    return feature;\n  });\n\n  updateLayerWithFeatures = (features) => {\n    const markerLayerSource = new Vector({\n      features,\n    });\n\n    const layer = this.getLayerByName(this.map.getLayers(),\n      LAYER_NAME_STATIONS);\n    layer.setSource(markerLayerSource);\n  };\n\n  // create individual layer for each station\n  createFeaturesLayers(features) {\n    features.map((feature) => { // eslint-disable-line array-callback-return\n      const featureSource = new Vector();\n      featureSource.addFeature(feature);\n      feature.setStyle(new Style({\n        image: new Circle({\n          radius: 17,\n          fill: new Fill({\n            color: this.setColorFeatureStyle(feature),\n          }),\n        }),\n      }));\n      const featureLayer = new VectorLayer({ source: featureSource });\n      featureLayer.set(LAYER_NAME_KEY, feature.getId());\n      this.map.addLayer(featureLayer);\n    });\n  }\n\n  // changing cursor type when hover over a station\n  featuresLayerPointerMove() {\n    this.map.on('pointermove', (e) => {\n      this.map.getTargetElement().style.cursor = this.map.hasFeatureAtPixel(e.pixel) ? 'pointer' : '';\n    });\n  }\n\n  // changing style for clicked station\n  featuresLayerClick() {\n    const select = new Select();\n    this.map.addInteraction(select);\n\n    select.on('select', (e) => {\n      const { selected } = e;\n      selected.forEach((feature) => {\n        feature.setStyle(mapStyles.clicked);\n      });\n    });\n  }\n\n  // fetch data for particular station\n  mapRegisterEvents = (fetchMeasurement) => {\n    this.map.on('click', (e) => {\n      e.preventDefault();\n      const iconFeature = this.map.getFeaturesAtPixel(e.pixel);\n      if (iconFeature !== null) {\n        const id = iconFeature[0].getId();\n        const adr = iconFeature[0].get('address');\n        fetchMeasurement(id);\n        const { address } = this.state;\n        if (adr !== address) {\n          this.setState({ address: adr });\n        }\n      }\n    });\n  };\n\n  getLayerByName = (layers, layerName) => {\n    let result = null;\n    layers.forEach((layer) => {\n      if (layer.get(LAYER_NAME_KEY) === layerName) {\n        result = layer;\n      }\n    });\n    return result;\n  };\n}\n\nMapComponent.propTypes = {\n  fetchStations: PropTypes.func.isRequired,\n  fetchMeasurement: PropTypes.func.isRequired,\n  fetchPartialData: PropTypes.func.isRequired,\n  stations: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.string]),\n  ),\n  data: PropTypes.object,\n  idArray: PropTypes.arrayOf(PropTypes.number),\n  partial: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.string]),\n  ),\n};\n\nMapComponent.defaultProps = {\n  stations: [],\n  data: {},\n  idArray: [],\n  partial: [],\n\n};\n\nexport default MapComponent;\n","import { connect } from 'react-redux';\nimport { fetchStations,\n  fetchMeasurement,\n  fetchPartialData,\n} from '../actions';\nimport MapComponent from '../components/Map';\n\nconst mapStateToProps = ({ stations, data, idArray, partial }) => ({ stations, data, idArray, partial });\n\nconst mapDispatchToProps = {\n  fetchStations,\n  fetchMeasurement,\n  fetchPartialData,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapComponent);\n","import React from 'react';\nimport './Header.css';\nimport logo from '../../assets/LogoBlue.svg';\n\nconst Header = () => (\n  <div className=\"header\">\n    <div>\n        KRAKÓW AIR CONDITION BASED ON &nbsp;\n      <img src={logo} alt=\"logo\" />\n        &nbsp; STATIONS\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <div>Created by Ela </div>\n  </div>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Map from '../Map/containers/MapContainer';\nimport Header from '../Header/components/Header';\nimport Footer from '../Footer/components/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Map />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import * as TYPES from '../types';\n\nconst INITIAL_STATE = [];\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case TYPES.FETCHED_STATIONS_DATA: {\n      return action.payload;\n    }\n    case TYPES.FETCHED_STATIONS_FAILED: {\n      return [action.error.message];\n    }\n    default:\n      return state;\n  }\n}\n","import * as TYPES from '../types';\n\nconst INITIAL_STATE = {};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case TYPES.FETCHED_DATA_FOR_ONE_STATION: {\n      return action.payload;\n    }\n    case TYPES.FETCHED_ONE_STATION_FAILED: {\n      return { ...state, error: action.error.message };\n    }\n    default:\n      return state;\n  }\n}\n","import * as TYPES from '../types';\n\nconst INITIAL_STATE = [];\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case TYPES.FETCHED_PARTIAL_DATA: {\n      return action.payload;\n    }\n    case TYPES.FETCHED_PARTIAL_FAILED: {\n      return [action.error.message];\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport stations from '../Map/reducers/stations';\nimport data from '../Map/reducers/data';\nimport idArray from '../Map/reducers/idArray';\nimport partial from '../Map/reducers/partialData';\n\nconst rootReducer = combineReducers({\n  stations,\n  data,\n  idArray,\n  partial,\n});\n\nexport default rootReducer;\n","import * as TYPES from '../types';\n\nexport default function (state = [], action) {\n  switch (action.type) {\n    case TYPES.IDS_ARRAY: {\n      return action.arrayOfIds;\n    }\n    default:\n      return state;\n  }\n}\n","import { takeEvery } from 'redux-saga/effects';\nimport * as TYPES from '../../types';\nimport * as ACTIONS from '../../actions';\n\nexport function* sensorsSaga() {\n  yield takeEvery(TYPES.FETCH_STATIONS, ACTIONS.apiFetchStations);\n}\n\nexport function* measurementSaga() {\n  yield takeEvery(TYPES.FETCH_DATA_FOR_ONE_STATION, ACTIONS.apiFetchDataForOneStation);\n}\n\nexport function* measurementPartialSaga() {\n  yield takeEvery(TYPES.FETCH_PARTIAL_DATA, ACTIONS.apiFetchPartialData);\n}\n","import { all } from 'redux-saga/effects';\nimport { sensorsSaga, measurementSaga, measurementPartialSaga } from '../Map/store/saga';\n\nexport default function* rootSaga() {\n  yield all([\n    sensorsSaga(),\n    measurementSaga(),\n    measurementPartialSaga(),\n  ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\nconst enhancers = [];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // eslint-disable-line no-underscore-dangle\n\nconst store = createStore(\n  reducers,\n  {},\n  composeEnhancers(applyMiddleware(...middleware), ...enhancers),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport { Provider } from 'react-redux';\nimport store from './config/store';\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}